<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-12T05:33:51 GMT" name="Default suite" finished-at="2022-08-12T05:34:28 GMT" duration-ms="36754">
    <groups>
    </groups>
    <test started-at="2022-08-12T05:33:51 GMT" name="Default test" finished-at="2022-08-12T05:34:28 GMT" duration-ms="36754">
      <class name="day3.test.MyClass">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:33:51 GMT" name="beforeClass" finished-at="2022-08-12T05:33:59 GMT" duration-ms="8252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="f()[pri:1, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:33:59 GMT" name="f" finished-at="2022-08-12T05:34:01 GMT" duration-ms="1835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:01 GMT" name="afterMethod" finished-at="2022-08-12T05:34:01 GMT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=MyClass.f()[pri:1, instance:day3.test.MyClass@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="loginTest()[pri:2, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:01 GMT" name="loginTest" finished-at="2022-08-12T05:34:03 GMT" duration-ms="1491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:03 GMT" name="afterMethod" finished-at="2022-08-12T05:34:03 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=MyClass.loginTest()[pri:2, instance:day3.test.MyClass@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TestCase3()[pri:3, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:03 GMT" name="TestCase3" finished-at="2022-08-12T05:34:20 GMT" duration-ms="17734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase3 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:20 GMT" name="afterMethod" finished-at="2022-08-12T05:34:20 GMT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase3 status=SUCCESS method=MyClass.TestCase3()[pri:3, instance:day3.test.MyClass@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TestCase4()[pri:4, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:20 GMT" name="TestCase4" finished-at="2022-08-12T05:34:24 GMT" duration-ms="3493" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [MSN] but found [Google]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [MSN] but found [Google]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at day3.test.MyClass.TestCase4(MyClass.java:83)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase4 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:24 GMT" name="afterMethod" finished-at="2022-08-12T05:34:24 GMT" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase4 status=FAILURE method=MyClass.TestCase4()[pri:4, instance:day3.test.MyClass@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TestCase5()[pri:5, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:24 GMT" name="TestCase5" finished-at="2022-08-12T05:34:26 GMT" duration-ms="1513" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Intentionally skipping this test case for demo purpose]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Intentionally skipping this test case for demo purpose
at day3.test.MyClass.TestCase5(MyClass.java:91)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase5 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:26 GMT" name="afterMethod" finished-at="2022-08-12T05:34:26 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCase5 status=SKIP method=MyClass.TestCase5()[pri:5, instance:day3.test.MyClass@7db12bb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:day3.test.MyClass@7db12bb6]" started-at="2022-08-12T05:34:26 GMT" name="afterClass" finished-at="2022-08-12T05:34:28 GMT" duration-ms="1971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- day3.test.MyClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
